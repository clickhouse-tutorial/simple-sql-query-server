{"version":3,"file":"static/js/7473.dcffb6f1.chunk.js","mappings":"8PAEMA,EAAiB,CACrBC,MAAO,OACPC,OAAQ,QACRC,OAAQ,kBAaV,MAVA,WACE,OAAoBC,EAAAA,cAAoB,MAAO,CAC7CC,MAAOL,GACOI,EAAAA,cAAoBE,EAAAA,GAAQ,CAC1CC,gBAAiB,MACjBC,aAAcC,EACdC,MAAO,YAKLC,EAAO,IAAIC,KACXH,EAAG,gzBAoBOE,EApBP,oKClBHE,EAAkB,CACtBZ,MAAO,OACPC,OAAQ,QACRC,OAAQ,kBAaV,MAVA,WACE,OAAoBC,EAAAA,cAAoB,MAAO,CAC7CC,MAAOQ,GACOT,EAAAA,cAAoBE,EAAAA,GAAQ,CAC1CC,gBAAiB,OACjBC,aAAc,8CACdE,MAAO,Y,+BCFI,SAASI,IACtB,OAAoBV,EAAAA,cAAoB,MAAO,KAAmBA,EAAAA,cAAoB,KAAM,KAAM,mBAAiCA,EAAAA,cAAoBW,EAAW,MAAoBX,EAAAA,cAAoBY,EAAAA,EAAU,MAAoBZ,EAAAA,cAAoBa,EAAAA,EAAQ,CAClQC,KAAM,UACQd,EAAAA,cAAoBe,EAAAA,EAAS,CAC3CC,QAAS,kBA6DX,WAEE,IAEMC,EAFYC,EAAAA,GAAAA,sBAA6BC,OAEtBC,YACnBC,EAAWJ,EAAO,GAClBK,EAAYL,EAAO,GACzBM,QAAQC,IAAIH,EAASI,IACrB,IACMC,EAAO,CACXrB,IAFUgB,EAASM,YAKrBC,IAAAA,KAAA,aAAyBF,GAAMG,MAAK,SAAAC,GAClCP,QAAQC,IAAIM,EAAIJ,MAChBJ,EAAUS,SAASC,KAAKC,UAAUH,EAAIJ,UACrCQ,SAAQ,eA7EIC,IACfC,KAAM,WACL,4BAA0CpC,EAAAA,cAAoBe,EAAAA,EAAS,CACxEC,QAAS,kBA+BX,WAEE,IAIMqB,EAJYnB,EAAAA,GAAAA,sBAA6BC,OAEtBC,YAEG,GAC5BG,QAAQC,IAAIa,EAAaZ,IAEzB,IAAMa,EAAeD,EAAaV,WAClCJ,QAAQC,IAAIc,GAEZ,IAAMC,GAAeC,EAAAA,EAAAA,IAAOF,EAAc,CACxCG,SAAU,MAEVC,WAAW,IAGbnB,QAAQC,IAAIe,GAEZF,EAAaN,SAASQ,GAnDPI,IACfP,KAAM,WACL,0BAAwCpC,EAAAA,cAAoBY,EAAAA,EAAU,MAAoBZ,EAAAA,cAAoB4C,EAAY,MAAoB5C,EAAAA,cAAoBY,EAAAA,EAAU,MAAoBZ,EAAAA,cAAoBa,EAAAA,EAAQ,CAC7NC,KAAM,SACQd,EAAAA,cAAoBe,EAAAA,EAAS,CAC3CqB,KAAM,UACNpB,QAAS,kBAGX,WAEE,IAIMqB,EAJYnB,EAAAA,GAAAA,sBAA6BC,OAEtBC,YAEG,GAC5BG,QAAQC,IAAIa,EAAaZ,IAEzB,IAAMa,EAAeD,EAAaV,WAClCJ,QAAQC,IAAIc,GAEZ,IAAMO,EAAgBb,KAAKC,UAAUD,KAAKc,MAAMR,GAAe,KAAM,GACrEf,QAAQC,IAAIqB,GAEZR,EAAaN,SAASc,GAlBPE,KACd","sources":["components/Editor/SQLEditor.tsx","components/Editor/JSONEditor.tsx","pages/sql/index.tsx"],"sourcesContent":["import React from 'react';\nimport Editor from '@monaco-editor/react';\nconst sqlEditorStyle = {\n  width: '100%',\n  height: '400px',\n  border: '1px solid #ccc'\n};\n\nfunction SQLEditor() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: sqlEditorStyle\n  }, /*#__PURE__*/React.createElement(Editor, {\n    defaultLanguage: \"sql\",\n    defaultValue: sql,\n    theme: 'light'\n  }));\n}\n\nexport default SQLEditor;\nconst date = new Date();\nconst sql = `\n------------------------------ClickHouse SQL Syntax-----------------------------\n-- [WITH expr_list|(subquery)]\n-- SELECT [DISTINCT [ON (column1, column2, ...)]] expr_list\n-- [FROM [db.]table | (subquery) | table_function] [FINAL]\n-- [SAMPLE sample_coeff]\n-- [ARRAY JOIN ...]\n-- [GLOBAL] [ANY|ALL|ASOF] [INNER|LEFT|RIGHT|FULL|CROSS] [OUTER|SEMI|ANTI]\n-- JOIN (subquery)|table (ON (expr_list) )|(USING (column_list) )\n-- [PREWHERE expr]\n-- [WHERE expr]\n-- [GROUP BY expr_list] [WITH ROLLUP|WITH CUBE] [WITH TOTALS]\n-- [HAVING expr]\n-- [ORDER BY expr_list] [WITH FILL] [FROM expr] [TO expr] [STEP expr]\n-- [LIMIT [offset_value, ]n BY columns]\n-- [LIMIT [n, ]m] [WITH TIES]\n-- [SETTINGS ...]\n-- [UNION  ...]\n-- [INTO OUTFILE filename [COMPRESSION type] ]\n-- [FORMAT format]\n--------------${date}----------------\n\nselect uniqExact(UserID) cnt, Age age\nfrom tutorial.hits_v1\nwhere EventDate = '2014-03-18'\ngroup by Age\norder by cnt desc\nlimit 10;\n\n`;","import React from 'react';\nimport Editor from '@monaco-editor/react';\nconst jsonEditorStyle = {\n  width: '100%',\n  height: '200px',\n  border: '1px solid #ccc'\n};\n\nfunction JSONEditor() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: jsonEditorStyle\n  }, /*#__PURE__*/React.createElement(Editor, {\n    defaultLanguage: \"json\",\n    defaultValue: '[{\"totalCount\":0},{\"_EXECUTE_TIME\":\"64ms\"}]',\n    theme: 'light'\n  }));\n}\n\nexport default JSONEditor;","import \"@arco-design/web-react/es/Space/style\";\nimport _Space from \"@arco-design/web-react/es/Space\";\nimport \"@arco-design/web-react/es/Button/style\";\nimport _Button from \"@arco-design/web-react/es/Button\";\nimport \"@arco-design/web-react/es/Divider/style\";\nimport _Divider from \"@arco-design/web-react/es/Divider\";\nimport React from 'react';\nimport SQLEditor from '@/components/Editor/SQLEditor';\nimport JSONEditor from '@/components/Editor/JSONEditor';\nimport axios from 'axios';\nimport { loader } from '@monaco-editor/react';\nimport { format } from 'sql-formatter';\nexport default function SQLQuery() {\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, \"SQL\\u67E5\\u8BE2\"), /*#__PURE__*/React.createElement(SQLEditor, null), /*#__PURE__*/React.createElement(_Divider, null), /*#__PURE__*/React.createElement(_Space, {\n    size: \"medium\"\n  }, /*#__PURE__*/React.createElement(_Button, {\n    onClick: () => handleSQLQuery(),\n    type: \"primary\"\n  }, \"\\u6267\\u884C\\u67E5\\u8BE2\"), /*#__PURE__*/React.createElement(_Button, {\n    onClick: () => handleFormatSQL(),\n    type: \"outline\"\n  }, \"\\u683C\\u5F0F\\u5316SQL\")), /*#__PURE__*/React.createElement(_Divider, null), /*#__PURE__*/React.createElement(JSONEditor, null), /*#__PURE__*/React.createElement(_Divider, null), /*#__PURE__*/React.createElement(_Space, {\n    size: \"large\"\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"outline\",\n    onClick: () => formatJSON()\n  }, \"\\u683C\\u5F0F\\u5316JSON\")));\n\n  function formatJSON() {\n    // 获取 Moncaco 实例\n    const editorRef = loader.__getMonacoInstance().editor;\n\n    const models = editorRef.getModels(); // 获取当前 JSONEditor，下标 1\n\n    const currentModel = models[1];\n    console.log(currentModel.id); // 当前 JSONEditor里面的值\n\n    const currentValue = currentModel.getValue();\n    console.log(currentValue); // 格式化json\n\n    const formattedJson = JSON.stringify(JSON.parse(currentValue), null, 2);\n    console.log(formattedJson); //设置格式化之后的json到JSONEditor\n\n    currentModel.setValue(formattedJson);\n  }\n  /**\n   * 格式化 SQL 函数\n   */\n\n\n  function handleFormatSQL() {\n    // 获取 Moncaco 实例\n    const editorRef = loader.__getMonacoInstance().editor;\n\n    const models = editorRef.getModels(); // 获取当前 SQLEditor，下标 0\n\n    const currentModel = models[0];\n    console.log(currentModel.id); // 获取当前 SQLEditor 中的值\n\n    const currentValue = currentModel.getValue();\n    console.log(currentValue); // 调用format()函数执行格式化 currentValue 操作\n\n    const formattedSQL = format(currentValue, {\n      language: 'sql',\n      // 标准SQL语法格式化\n      uppercase: true // 关键字转大写\n\n    });\n    console.log(formattedSQL); //设置编辑器的内容为格式化之后的SQL值\n\n    currentModel.setValue(formattedSQL);\n  }\n  /**\n   * SQL 查询处理事件函数\n   */\n\n\n  function handleSQLQuery() {\n    // 获取Monaco实例\n    const editorRef = loader.__getMonacoInstance().editor;\n\n    const models = editorRef.getModels();\n    const sqlModel = models[0];\n    const jsonModel = models[1];\n    console.log(sqlModel.id);\n    const sql = sqlModel.getValue();\n    const data = {\n      sql: sql\n    }; // 发送 post 查询请求\n\n    axios.post(`/sql/query`, data).then(res => {\n      console.log(res.data);\n      jsonModel.setValue(JSON.stringify(res.data));\n    }).finally(() => {// do nothing\n    });\n  }\n}"],"names":["sqlEditorStyle","width","height","border","React","style","Editor","defaultLanguage","defaultValue","sql","theme","date","Date","jsonEditorStyle","SQLQuery","SQLEditor","_Divider","_Space","size","_Button","onClick","models","loader","editor","getModels","sqlModel","jsonModel","console","log","id","data","getValue","axios","then","res","setValue","JSON","stringify","finally","handleSQLQuery","type","currentModel","currentValue","formattedSQL","format","language","uppercase","handleFormatSQL","JSONEditor","formattedJson","parse","formatJSON"],"sourceRoot":""}