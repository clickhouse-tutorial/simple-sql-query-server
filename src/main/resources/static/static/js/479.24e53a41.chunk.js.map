{"version":3,"file":"static/js/479.24e53a41.chunk.js","mappings":"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","sources":["pages/user/info/my-team.tsx","../node_modules/@arco-design/web-react/es/Skeleton/text.js","../node_modules/@arco-design/web-react/es/Skeleton/image.js","../node_modules/@arco-design/web-react/es/Skeleton/index.js"],"sourcesContent":["import \"@arco-design/web-react/es/List/style\";\nimport _List from \"@arco-design/web-react/es/List\";\nimport \"@arco-design/web-react/es/Avatar/style\";\nimport _Avatar from \"@arco-design/web-react/es/Avatar\";\nimport \"@arco-design/web-react/es/Skeleton/style\";\nimport _Skeleton from \"@arco-design/web-react/es/Skeleton\";\nimport \"@arco-design/web-react/es/Typography/style\";\nimport _Typography from \"@arco-design/web-react/es/Typography\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst {\n  Text\n} = _Typography;\n\nfunction MyTeam() {\n  const [data, setData] = useState(new Array(4).fill({}));\n  const [loading, setLoading] = useState(true);\n\n  const getData = async () => {\n    const {\n      data\n    } = await axios.get('/api/users/teamList').finally(() => setLoading(false));\n    setData(data);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/React.createElement(_List, {\n    dataSource: data,\n    render: (item, index) => {\n      return /*#__PURE__*/React.createElement(_List.Item, {\n        key: index,\n        style: index !== data.length - 1 ? {\n          padding: '8px 0px'\n        } : {\n          padding: '8px 0px 0px 0px'\n        }\n      }, loading ? /*#__PURE__*/React.createElement(_Skeleton, {\n        animation: true,\n        text: {\n          width: ['80%', '20%'],\n          rows: 2\n        },\n        image: {\n          shape: 'circle'\n        }\n      }) : /*#__PURE__*/React.createElement(_List.Item.Meta, {\n        avatar: /*#__PURE__*/React.createElement(_Avatar, {\n          size: 48\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: item.avatar\n        })),\n        title: item.name,\n        description: /*#__PURE__*/React.createElement(Text, {\n          type: \"secondary\",\n          style: {\n            fontSize: '12px'\n          }\n        }, `共${(item.members || 0).toLocaleString()}人`)\n      }));\n    }\n  });\n}\n\nexport default MyTeam;","import React from 'react';\nimport { isArray } from '../_util/is';\nimport cs from '../_util/classNames';\nexport default function text(props) {\n    var style = props.style, _a = props.width, width = _a === void 0 ? '60%' : _a, _b = props.rows, rows = _b === void 0 ? 3 : _b, className = props.className, prefixCls = props.prefixCls;\n    var classNames = cs(prefixCls + \"-text\", className);\n    var nodes = [];\n    function getTextWidth(index) {\n        if (isArray(width)) {\n            return width[index];\n        }\n        if (rows - 1 === index) {\n            return width;\n        }\n        return undefined;\n    }\n    for (var i = 0; i < rows; i++) {\n        nodes.push(React.createElement(\"li\", { className: prefixCls + \"-text-row\", key: i, style: { width: getTextWidth(i) } }));\n    }\n    return (React.createElement(\"ul\", { className: classNames, style: style }, nodes));\n}\n","import React from 'react';\nimport cs from '../_util/classNames';\nexport default function image(props) {\n    var _a;\n    var style = props.style, _b = props.shape, shape = _b === void 0 ? 'square' : _b, size = props.size, _c = props.position, position = _c === void 0 ? 'left' : _c, className = props.className, prefixCls = props.prefixCls;\n    var classNames = cs(prefixCls + \"-image\", (_a = {},\n        _a[prefixCls + \"-image-\" + position] = position,\n        _a[prefixCls + \"-image-\" + shape] = shape,\n        _a[prefixCls + \"-image-\" + size] = size,\n        _a), className);\n    return React.createElement(\"div\", { className: classNames, style: style });\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { forwardRef, useContext } from 'react';\nimport cs from '../_util/classNames';\nimport { isObject } from '../_util/is';\nimport Text from './text';\nimport Image from './image';\nimport { ConfigContext } from '../ConfigProvider';\nimport useMergeProps from '../_util/hooks/useMergeProps';\nfunction getComponentProps(prop) {\n    return isObject(prop) ? prop : {};\n}\nvar defaultProps = {\n    text: true,\n    loading: true,\n};\nfunction Skeleton(baseProps, ref) {\n    var _a;\n    var _b = useContext(ConfigContext), getPrefixCls = _b.getPrefixCls, componentConfig = _b.componentConfig;\n    var props = useMergeProps(baseProps, defaultProps, componentConfig === null || componentConfig === void 0 ? void 0 : componentConfig.Skeleton);\n    var style = props.style, className = props.className, animation = props.animation, loading = props.loading, image = props.image, text = props.text, children = props.children;\n    var imageProps = getComponentProps(image);\n    var textProps = getComponentProps(text);\n    var prefixCls = getPrefixCls('skeleton');\n    var classNames = cs(prefixCls, (_a = {},\n        _a[prefixCls + \"-animate\"] = animation,\n        _a), className);\n    function renderImage() {\n        return (image && (React.createElement(\"div\", { className: prefixCls + \"-header\" },\n            React.createElement(Image, __assign({ prefixCls: prefixCls }, imageProps)))));\n    }\n    function renderText() {\n        return (text && (React.createElement(\"div\", { className: prefixCls + \"-content\" },\n            React.createElement(Text, __assign({ prefixCls: prefixCls }, textProps)))));\n    }\n    return (React.createElement(React.Fragment, null, loading ? (React.createElement(\"div\", { className: classNames, style: style, ref: ref },\n        imageProps.position !== 'right' && renderImage(),\n        renderText(),\n        imageProps.position === 'right' && renderImage())) : (children)));\n}\nvar SkeletonComponent = forwardRef(Skeleton);\nSkeletonComponent.displayName = 'Skeleton';\nexport default SkeletonComponent;\n"],"names":["Text","_Typography","useState","Array","fill","data","setData","loading","setLoading","getData","axios","finally","useEffect","React","_List","dataSource","render","item","index","key","style","length","padding","_Skeleton","animation","text","width","rows","image","shape","avatar","_Avatar","size","src","title","name","description","type","fontSize","members","toLocaleString","props","_a","_b","className","prefixCls","classNames","cs","nodes","i","push","isArray","_c","position","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","getComponentProps","prop","isObject","defaultProps","SkeletonComponent","forwardRef","baseProps","ref","useContext","ConfigContext","getPrefixCls","componentConfig","useMergeProps","Skeleton","children","imageProps","textProps","renderImage","Image","displayName"],"sourceRoot":""}